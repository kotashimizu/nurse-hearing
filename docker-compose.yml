version: '3.8'

services:
  # Next.jsアプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nurse-hearing-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - LINE_CHANNEL_ACCESS_TOKEN=${LINE_CHANNEL_ACCESS_TOKEN}
      - LINE_CHANNEL_SECRET=${LINE_CHANNEL_SECRET}
    volumes:
      - ./public:/app/public:ro
    depends_on:
      - db
      - redis
    networks:
      - nurse-hearing-network
    restart: unless-stopped

  # PostgreSQLデータベース（開発環境用）
  db:
    image: postgres:15-alpine
    container_name: nurse-hearing-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-nurse_hearing}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - nurse-hearing-network
    restart: unless-stopped

  # Redis（キャッシュ・セッション管理用）
  redis:
    image: redis:7-alpine
    container_name: nurse-hearing-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nurse-hearing-network
    restart: unless-stopped

  # Nginxリバースプロキシ（本番環境用）
  nginx:
    image: nginx:alpine
    container_name: nurse-hearing-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - nurse-hearing-network
    restart: unless-stopped
    profiles:
      - production

  # Python APIサーバー（シフト最適化用）
  python-api:
    build:
      context: ./python-api
      dockerfile: Dockerfile
    container_name: nurse-hearing-python-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./python-api:/app
    depends_on:
      - db
    networks:
      - nurse-hearing-network
    restart: unless-stopped
    profiles:
      - with-python

volumes:
  postgres_data:
  redis_data:

networks:
  nurse-hearing-network:
    driver: bridge